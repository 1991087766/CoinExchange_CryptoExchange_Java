server.port=6004
server.context-path=/market
spring.session.store-type=none
#==========================================================================================================
#datasource
#spring.datasource.url=jdbc:mysql://182.37.19.14:3306/bizzan?characterEncoding=utf-8&serverTimezone=GMT%2B8&useSSL=false
spring.datasource.url=jdbc:mysql://8.130.28.197:3306/ox?characterEncoding=utf-8&serverTimezone=GMT%2B8&useSSL=false
spring.datasource.username=ox
spring.datasource.password=WnpBeZPRG8a4fDwE

#mongodb
spring.data.mongodb.uri=mongodb://ox:Ox.2021@8.130.28.197:27017/ox
spring.data.mongodb.database=ox
#redis
## redis服务器配置
#spring.redis.cluster.nodes=39.104.119.155:6380
spring.redis.host:8.130.28.197
#spring.redis.host:122.157.0.15
spring.redis.port:6379
## 连接池最大连接数（使用负值表示没有限制）
spring.redis.pool.max-active=300
## 连接池最大阻塞等待时间（使用负值表示没有限制）
spring.redis.pool.max-wait=60000
## 连接池中的最大空闲连接
spring.redis.pool.max-idle=100
## 连接池中的最小空闲连接
spring.redis.pool.min-idle=20
## 连接超时时间（毫秒）
spring.redis.timeout=30000
## 连接密码
spring.redis.password=OxExchenge.2021
#eureka
eureka.client.serviceUrl.defaultZone=http://ox.cswexc.com/eureka/
#eureka.client.serviceUrl.defaultZone=http://122.157.0.125:7000/eureka/
#aliyun config
aliyun.accessKeyId=9WnTMvKiGKHHIJlV
aliyun.accessKeySecret=16QkZf17hyttE0IcFOPPi01m1lMQFx
#外网地址
aliyun.ossEndpoint=oss-cn-shenzhen.aliyuncs.com
aliyun.ossBucketName=OxExchenge
# sms
sms.driver=diyi
sms.gateway=
sms.username=15810610402
sms.password=junji0702
sms.sign=OX
#a2e134a8af9a56d9feaa4b199f86b89b

#jpa
#spring.jpa.hibernate.ddl-auto=update
#system
#实名认证通过后奖励
commission.need.real-name=1
#开启二级奖励（1=开启）
commission.promotion.second-level=1
#密码加密因子
spark.system.md5.key=Ox.(4%s20=_qqmynww+ri_))^hzjgtap%m)abib=xvt8e#cqr
#==========================================================================================================
#datasource
spring.datasource.type=com.alibaba.druid.pool.DruidDataSource
#jpa
spring.jpa.show-sql=true
spring.data.jpa.repositories.enabled=true
spring.jpa.hibernate.ddl-auto=update

#json
spring.jackson.serialization.indent_output=true
spring.jackson.date-format=yyyy-MM-dd HH:mm:ss
spring.jackson.time-zone=GMT+8
#eureka
eureka.instance.prefer-ip-address=true

#kafka
#spring.kafka.bootstrap-servers=172.127.0.54:9092
spring.kafka.bootstrap-servers=8.130.28.197:9092
# 重传次数
spring.kafka.producer.retries=0
# 每次批处理的大小
spring.kafka.producer.batch.size=256
#linger指定的时间等待更多的records出现
spring.kafka.producer.linger=1
# 缓存数据的内存大小
spring.kafka.producer.buffer.memory=1048576
spring.kafka.consumer.enable.auto.commit=false
spring.kafka.consumer.session.timeout=15000
spring.kafka.consumer.auto.commit.interval=100
spring.kafka.consumer.auto.offset.reset=earliest
spring.kafka.consumer.group.id=default-group
spring.kafka.consumer.concurrency=9
spring.kafka.consumer.maxPollRecordsConfig=50
spring.devtools.restart.enabled=true

#freemarker
spring.freemarker.cache=false
spring.freemarker.template-loader-path=classpath:/templates

#mail setting
spring.mail.host=smtp.163.com
spring.mail.port=465
spring.mail.properties.mail.smtp.socketFactory.class=javax.net.ssl.SSLSocketFactory
spring.mail.username=navy_xu1991@163.com
spring.mail.password=junji0702
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true
spring.mail.properties.mail.smtp.starttls.required=true

# system(发送邮件使用)
spark.system.work-id=1
spark.system.data-center-id=1
spark.system.host=smtp.163.com
spark.system.name=OXex
#接收系统通知的邮箱，多个用【,】分割
spark.system.admins=navy_xu1991@163.com

#通知短信接收手机
spark.system.admin-phones=15825507654

#创瑞短信
access.key.id=
access.key.secret=

#ES配置文件
es.username=
es.password=
es.mine.index=
es.mine.type=
es.public.ip=
es.private.ip=#
es.port=9200


######################################## hawk netty ########################################
aqmd.netty.port=28901
## \u8D1F\u8D23\u5904\u7406\u5BA2\u6237\u7AEF\u7684TCP\u8FDE\u63A5\u8BF7\u6C42\uFF0C\u5EFA\u8BAE1
aqmd.netty.bossThreadSize=1
## IO\u8BFB\u5199\u7EBF\u7A0B\uFF0C\u5EFA\u8BAE1<N<CPU\u6838\u5FC3\u6570*2
aqmd.netty.worker-thread-size=3
## \u5305\u5934\u8868\u793A\u5305\u957F\u5EA6\u5360\u7684\u957F\u5EA6
aqmd.netty.packetHeaderLength=4
## \u6570\u636E\u5305\u6700\u5927\u503C\uFF0C\u8D85\u8FC7\u629BTooLongFrameException
aqmd.netty.max-frame-length=2147483647

## \u5199\u7A7A\u95F2\u65F6\u95F4\uFF0C\u5355\u4F4D\uFF1A\u79D2
aqmd.netty.writer-idle=200


## \u4E1A\u52A1\u6700\u5927\u8D85\u65F6\u65F6\u95F4\uFF0C\u5355\u4F4D\uFF1A\u79D2
aqmd.netty.max-timeout=60
## \u4E1A\u52A1\u7F3A\u7701\u8D85\u65F6\u65F6\u95F4\uFF0C\u5355\u4F4D\uFF1A\u79D2
aqmd.netty.defaultTimeout=30
##\u5177\u4F53\u4E1A\u52A1\u5904\u7406\u7684handler\u7EBF\u7A0B\u6570
aqmd.netty.deal-handler-thread-size=10
##netty\u65E5\u5FD7\u7EA7\u522B\u8BBE\u7F6E
aqmd.netty.serviceLoggerLevel=debug
##\u5F00\u542F\u4E0D\u767B\u9646\u8BBF\u95EE
aqmd.netty.direct-access-flag=1
##\u5141\u8BB8\u8BBF\u95EE\u7684\u6307\u4EE4
aqmd.netty.direct-access-command=20001,20002,20021,20022
aqmd.netty.websocket-flag=1
aqmd.netty.websocket-port=28985